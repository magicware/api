---
openapi: '3.0.2'
################################################################################
#                                  Header                                      #
################################################################################
tags:
  -  name: Authentication
     description: Everything about authentication
  -  name: Product
     description: Everything about products
  -  name: Business case
     description: Everything about business cases
info:
  title: M2G API documentation
  version: v1
  description:  |
    Informations about avaiable M2G API.
    # Getting Started
    ## Swagger UI
    Our API docs are also available via [Swagger UI](https://magicware.github.io/api/swagger-ui)
    ## Security
    ### HTTPS
    All api calls and callbacks require HTTPS. Your service will need a valid SSL certificate and be accesible via the standard SSL port (port 443).
    ## Making an API request
    ```POST https://magicware.iscontent.cz/api/v1/reservations/businessCases HTTP/1.1```
    ```json
    {
        Accept: text/json
        X-API-Authentication-Token: e00a713d-ad81-4b4f-8801-31b34842f640
        Content-Type: application/json; charset=utf-8
        Content-Length: 1000
    }
    ```
  x-logo:
    url: "https://avatars1.githubusercontent.com/u/8859303"
externalDocs:
  url: 'http://www.magicware.cz'
  description: More informations about this feature at www.magicware.cz
servers:
  -  url: 'https://{URLINSTANCENAME}.{URLINSTANCEENVIRONMENT}.com/api/{URLVERSION}'
     description: API server URL format
     variables:
       URLINSTANCENAME:
         default: 'magicware'
         description: Part of an url to the instance of the M2G system
       URLINSTANCEENVIRONMENT:
         default: 'iscontent'
         description: Part of an url to the instance of the M2G system
       URLVERSION:
         default: 'v1'
################################################################################
#                                  Paths                                       #
################################################################################
paths:
  /administration/user/login:
    post:
      description:  |
        #### **API-IDENTIFIER**: `Administration.Users.Login`<br /><br />**URL-ENVIRONMENT**: `is>content`<br />**URL-VERSION**: `v1`<br /><br />
        ---
        Login and obtain the ApiKeyAuth (apiKey) authentication token.
        
        If the value of property `authenticationToken` is 'null', login was not successful
        
        **Authentication token is automatically set into request header**.
      tags:
        -  Authentication
      summary: "Login and authorize"
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginAuthorization'
      responses:
        '200':
          description:  |
            OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginAuthorizationToken'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /products/priceCorrections:
    put:
      description:  |
        #### **API-IDENTIFIER**: `Products.Prices.PriceCorrections.AdjustPriceVariant`<br /><br />**URL-ENVIRONMENT**: `is>content`<br />**URL-VERSION**: `v1`<br /><br />
        ---
        The price correction currently affects adjusted product variant prices only in exports.
      tags:
        -  Product
      summary: "Re-price product variants or adjust their end price."
      security:
        -  ApiKeyAuth: []
      requestBody:
        required: True
        description:  |
          Price correction with it's type how it behave and it's variant unique key.
          To remove the price correction, just simply set the price correction amount to a zero.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/priceCorrection'
      responses:
        '200':
          description:  |
            OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/priceCorrection'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /reservations/businessCases:
    post:
      description:  |
        #### **API-IDENTIFIER**: `Reservations.BusinessCases.New`<br /><br />**URL-ENVIRONMENT**: `is>content`<br />**URL-VERSION**: `v1`<br /><br />
        ---
        Creates new business case. Returns extra ID and Number of created business case.
      tags:
        -  Business case
      summary: "Create a new business case."
      security:
        -  ApiKeyAuth: []
      requestBody:
        required: True
        description:  |
          Defines the business case.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/businessCase~1request'
      responses:
        '200':
          description:  |
            OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/businessCase~1response'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /reservations/businessCases/customInfo:
    put:
      description:  |
        #### **API-IDENTIFIER**: `Reservations.BusinessCases.BcCustomInfo.Actualize`<br /><br />**URL-ENVIRONMENT**: `is>content`<br />**URL-VERSION**: `v1`<br /><br />
        ---
        Requires an existing business case.
      tags:
        -  Business case
      summary: "Actualize additional data of a business case."
      security:
        -  ApiKeyAuth: []
      requestBody:
        required: True
        description:  |
          Defines additional data for a business case.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bcCustomInfo'
      responses:
        '200':
          description:  |
            OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bcCustomInfo'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /reservations/businessCases/priceItems:
    put:
      description:  |
        #### **API-IDENTIFIER**: `Reservations.BusinessCases.PriceItems.Actualize`<br /><br />**URL-ENVIRONMENT**: `is>content`<br />**URL-VERSION**: `v1`<br /><br />
        ---
        Requires an existing business case.
      summary: "Create, modify or release the price items."
      tags:
        -  Business case
      security:
        -  ApiKeyAuth: []
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/priceItems'
      responses:
        '200':
          description:  |
            OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/priceItems'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /reservations/businesscases/invoices:
    get:
      description:  |
        #### **API-IDENTIFIER**: `Reservations.BusinessCases.Invoices.Get`<br /><br />**URL-ENVIRONMENT**: `is>content`<br />**URL-VERSION**: `v1`<br /><br />
        ---
        Requires an existing business case.<br /><br />
        
        Gets a list of the business case's proforma invoices. If no proforma invoices exists, they are created automatically by business case's payment policy.
        
        User requesting this action has to be an organization owner of the business case.
      summary: "Get invoices attached to a business case."
      tags:
        -  Business case
      security:
        -  ApiKeyAuth: []
      parameters:
        -  in: query
           name: businessCaseId
           description: Required if no `businessCaseNumber` is provided. ID or Number of the business case is required. **Cannot be used both in one request**.
           required: True
           schema:
             type: integer
             format: int32
        -  in: query
           name: businessCaseNumber
           description: Required if no `businessCaseId` is provided. ID or Number of the business case is required. **Cannot be used both in one request**.
           required: True
           schema:
             type: integer
             format: int64
        -  in: query
           name: type
           description: Defines a type of the required invoices.
           required: True
           schema:
             type: string
             enum: [proforma]
      responses:
        '200':
          description:  |
            OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bcInvoice~1response'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          description:  |
            Internal server error - request has ended as a fatal error. Check the `message` property for more detail information about the occured error in the response<br /> <br /><p style='margin:0px !important'># Expected errors:</p><table style='margin:0px !important'><tr><th>Error (errorId)</th><th>Description</th></tr><tr><td style='text-align:center'>-1</td><td>Unexpected unknown error with unspecified error ID</td></tr><tr><td style='text-align:center'>1003</td><td>Business case provided by identifier has not been found</td></tr><tr><td style='text-align:center'>1035</td><td>Identifiers provided in api request query of a business case are not in valid state</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reservations/businesscases/invoices/contents:
    get:
      description:  |
        #### **API-IDENTIFIER**: `Reservations.BusinessCases.Invoices.Content.Get`<br /><br />**URL-ENVIRONMENT**: `is>content`<br />**URL-VERSION**: `v1`<br /><br />
        ---
        Requires an existing business case and printeable invoice document.<br /><br />
        
        Gets a document file of an invoice.
        
        User requesting this action has to be an organization owner of the business case.
      summary: "Get a printeable invoice file attached to a business case."
      tags:
        -  Business case
      security:
        -  ApiKeyAuth: []
      parameters:
        -  in: query
           name: businessCaseId
           description: Required if no `businessCaseNumber` is provided. ID or Number of the business case is required. **Cannot be used both in one request**.
           required: True
           schema:
             type: integer
             format: int32
        -  in: query
           name: businessCaseNumber
           description: Required if no `businessCaseId` is provided. ID or Number of the business case is required. **Cannot be used both in one request**.
           required: True
           schema:
             type: integer
             format: int64
        -  in: query
           name: accountingDocId
           description: ID of an accounting document
           required: True
           schema:
             type: integer
             format: int32
      responses:
        '200':
          description:  |
            OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            application/msword:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '425':
          description:  |
            Too early - The requested file is still generating, please try again later.
        '500':
          description:  |
            Internal server error - request has ended as a fatal error. Check the `message` property for more detail information about the occured error in the response<br /> <br /><p style='margin:0px !important'># Expected errors:</p><table style='margin:0px !important'><tr><th>Error (errorId)</th><th>Description</th></tr><tr><td style='text-align:center'>-1</td><td>Unexpected unknown error with unspecified error ID</td></tr><tr><td style='text-align:center'>1003</td><td>Business case provided by identifier has not been found</td></tr><tr><td style='text-align:center'>1035</td><td>Identifiers provided in api request query of a business case are not in valid state</td></tr><tr><td style='text-align:center'>1036</td><td>File does not exists - but should exist</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reservations/businesscases/persons:
    put:
      description:  |
        #### **API-IDENTIFIER**: `Reservations.BusinessCases.Persons`<br /><br />**URL-ENVIRONMENT**: `is>content`<br />**URL-VERSION**: `v1`
        ---
        Allows to modify a passengers of a business case.<br />
        ID of the booking is now an optional parameter. Keep in mind, the passengers modified outside the booking process will not be automatically associated with the booking process.
        
        User requesting this action has to be an organization owner of the business case.
      summary: "Modify a passengers of a business case"
      tags:
        -  Business case
      security:
        -  ApiKeyAuth: []
      requestBody:
        required: True
        description:  |
          Defines the passangers.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cf8a454f-cc43-a125-ae3e-7ad1aea4a2b7'
      responses:
        '204':
          $ref: '#/components/responses/204NoContent'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          description:  |
            Internal server error - request has ended as a fatal error. Check the `message` property for more detail information about the occured error in the response<br /> <br /><p style='margin:0px !important'># Expected errors:</p><table style='margin:0px !important'><tr><th>Error (errorId)</th><th>Description</th></tr><tr><td style='text-align:center'>-1</td><td>Unexpected unknown error with unspecified error ID</td></tr><tr><td style='text-align:center'>1015</td><td>Booking ID is not specified</td></tr><tr><td style='text-align:center'>1016</td><td>Specified Booking ID doesn't exist</td></tr><tr><td style='text-align:center'>1017</td><td>Invalid persons count</td></tr><tr><td style='text-align:center'>1018</td><td>Invalid persons birth dates</td></tr><tr><td style='text-align:center'>1019</td><td>Specified country ISO code not found</td></tr><tr><td style='text-align:center'>1020</td><td>Not specified error</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
################################################################################
#                                Components                                    #
################################################################################
components:
  schemas:
    
    loginAuthorization:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: User name
        password:
          type: string
          description: User password
    loginAuthorizationToken:
      type: object
      properties:
        authenticationToken:
          type: string
          format: uuid
          description: Authorization token. If the value of property `authenticationToken` is 'null', login was not successful
          nullable: true
          example: e00a713d-ad81-4b4f-8801-31b34842f640
    
    
    priceCorrection:
      type: object
      required:
        - amount
        - dateFrom
        - nights
        - productId
        - facilityUnitPlanId
      properties:
        amount:
          type: number
          format: double
          description: The value of a price correction
        dateFrom:
          type: string
          format: date
          description: Date From
        nights:
          type: integer
          format: int32
          description: Count of nights
        departureTransportFacilityId:
          type: integer
          format: int32
          description: ID of a depature transport facility
          nullable: true
        departureStationId:
          type: integer
          format: int32
          description: ID of a departure station
          nullable: true
        returnArrivalStationId:
          type: integer
          format: int32
          description: ID of an arrival station
          nullable: true
        productId:
          type: integer
          format: int32
          description: ID of a product
        priceListCategoryCbId:
          type: integer
          format: int32
          description: Codebook ID of a price list category
          nullable: true
        boardTypeCbId:
          type: integer
          format: int32
          description: Codebook ID of a board type
          nullable: true
        saleGroupId:
          type: integer
          format: int32
          description: ID of a sale group
          nullable: true
        facilityUnitPlanId:
          type: integer
          format: int32
          description: ID of a facility unit plan
    
    
    #7f0ec1ef-1a09-0117-5f92-357281bd26ca:
    #  type: object
    #  properties:
    #    id:
    #      type: integer
    #      format: int32
    businessCase/request:
      type: object
      properties:
        name:
          type: string
          description: Project name
          nullable: true
        customerId:
          type: integer
          format: int32
          description: ID of a customer.
          nullable: true
        businessCaseKindCbId:
          type: integer
          format: int32
          description: ID of a business case kind.
          nullable: true
        costCenterId:
          type: integer
          format: int32
          description: ID of a cost center.
          nullable: true
        ownerId:
          type: integer
          format: int32
          description: ID of an owner.
          nullable: true
    businessCase/response:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: ID of new business case
        number:
          type: integer
          format: int64
          description: Number of new business case
        name:
          type: string
          description: Project name
          nullable: true
        customerId:
          type: integer
          format: int32
          description: ID of a customer.
          nullable: true
        businessCaseKindCbId:
          type: integer
          format: int32
          description: ID of a business case kind.
          nullable: true
        costCenterId:
          type: integer
          format: int32
          description: ID of a cost center.
          nullable: true
        ownerId:
          type: integer
          format: int32
          description: ID of an owner.
          nullable: true
    bcCustomInfo:
      type: object
      required:
        - businessCaseId
      properties:
        businessCaseId:
          type: integer
          format: int32
          description: ID of the business case that additional data are for
        destinationId:
          type: integer
          format: int32
          description: ID of a destination
          nullable: true
        productTypeId:
          type: integer
          format: int32
          description: ID of a product type
          nullable: true
        accommodationCategoryCbId:
          type: integer
          format: int32
          description: ID of an accommodation
          nullable: true
        boardTypeCbId:
          type: integer
          format: int32
          description: ID of a board
          nullable: true
        transportTypeCbID:
          type: integer
          format: int32
          description: ID of a board
          nullable: true
        term:
          $ref: '#/components/schemas/bcCustomInfo~1Term'
        accommodationTerm:
          $ref: '#/components/schemas/bcCustomInfo~1AccommodationTerm'
        personCount:
          type: integer
          format: int32
          description: Count of a persons.
          nullable: true
        hotelName:
          type: string
          description: Name of a hotel
        roomKind:
          type: string
          description: Kind of a room
        departurePlace:
          type: string
          description: Departure place
        services:
          type: string
          description: Additional services
    bcCustomInfo/Term:
      description: Term of accomodation
      type: object
      properties:
        dateFrom:
          type: string
          format: date
          description: Date from
          nullable: true
        dateTo:
          type: string
          format: date
          description: Date to
          nullable: true
    bcCustomInfo/AccommodationTerm:
      description: Start and end of the trip
      type: object
      properties:
        dateFrom:
          type: string
          format: date
          description: Date from
          nullable: true
        dateTo:
          type: string
          format: date
          description: Date to
          nullable: true
    priceItems:
      required:
        - arrayOfPriceItem
      type: object
      properties:
        priceItems:
          type: array
          items: 
            $ref: '#/components/schemas/priceItem'
    priceItem:
      required:
        - businessCaseId
        - commitmentModeId
        - amount
        - currencyId
        - operation
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
          description:  |
            ID of a price item. 
            Can be null or empty if the property 'operation' is 'save'
        businessCaseId:
          type: integer
          format: int32
          description: ID of a business case
        priceListItemId:
          type: integer
          format: int32
          nullable: true
          description: ID of a price list item
        commitmentModeId:
          type: integer
          format: int32
          description: ID of a commitment mode
        name:
          type: string
          description: Name of a price item
          nullable: true
        amount:
          type: number
          format: double
          description: The value of a price item amount
        currencyId:
          type: integer
          format: int32
        accountingId:
          type: integer
          format: int32
          nullable: true
          description: ID of an accounting
        operation:
          type: string
          description: |
            The operation with a price item, that you intend to do
              - `save`: 
                  If the property `id` is 'null' or empty, then the new price item will be created.
                  Otherwise if the property `id` has a value, then an update of an existing price item will be proceed.
              - `release`: 
                  The price item of a set property `id` will be realesed (not cancelled)
          enum:
            - save
            - release
    
    
    bcInvoice/response:
      required:
        - arrayOfBcInvoices
      type: object
      properties:
        invoices:
          type: array
          items: 
            $ref: '#/components/schemas/bcInvoice~1response~1bcInvoice'
    bcInvoice/response/bcInvoice:
      type: object
      properties:
        variableSymbol:
          type: integer
          format: int64
          nullable: true
          description: Variable symbol of the invoice
        value:
          type: number
          format: double
          description: Value of the invoice
        accountingDocId:
          type: integer
          format: int32
          description: ID of the document where invoice is stored as a printable document
    
    Error:
       type: object
       properties:
         errorId:
           type: integer
           format: int32
           description: Internal system ID of the error
         timestamp:
           type: integer
           format: int64
           description: Timestamp of the event, epoch time in milliseconds
         message:
           type: string
           description: Description of the internal server error
           nullable: true
    
    cf8a454f-cc43-a125-ae3e-7ad1aea4a2b7:
      type: object
      required:
        - number
        - customer
        - bookings
      properties:
        number:
          type: integer
          description:  |
            Number of the business case
          format: int64
        customer:
          $ref: '#/components/schemas/96612934-87a3-c7ec-3f8a-11d257bc8490'
        bookings:
          type: array
          description:  |
            List of bookings
          items:
            $ref: '#/components/schemas/ded41841-b2b9-1904-8e1a-25338c65f0a7'
    96612934-87a3-c7ec-3f8a-11d257bc8490:
      type: object
      description:  |
        Contact person
      required:
        - firstName
        - lastName
      properties:
        birthDate:
          type: string
          description:  |
            Birth date
          format: datetime
          nullable: true
        firstName:
          type: string
          description:  |
            First name
        middleName:
          type: string
          description:  |
            Middle name
        lastName:
          type: string
          description:  |
            Last name
        nationality:
          type: string
          description:  |
            Nationality. Country ISO Code (ISO 3)
        street:
          type: string
          description:  |
            Street
        city:
          type: string
          description:  |
            City
        zipCode:
          type: string
          description:  |
            ZIP code
        phone:
          type: string
          description:  |
            Phone number
        email:
          type: string
          description:  |
            Email
        extendedPersonData:
          $ref: '#/components/schemas/7d3e6c0c-7044-815f-e074-932e8f18d707'
    7d3e6c0c-7044-815f-e074-932e8f18d707:
      type: object
      description:  |
        Additional data of the passenger
      properties:
        ageCategory:
          type: string
          description:  |
            
            The person age category
                - `adult`:
                    An age category of an adult.
                - `child`: 
                    An age category of a child.
                - `infant`: 
                    An age category of a baby.
          enum:
            - adult
            - child
            - infant
    ded41841-b2b9-1904-8e1a-25338c65f0a7:
      type: object
      description:  |
        Booking and it's data
      required:
        - passengers
      properties:
        bookingId:
          type: integer
          description:  |
            Booking ID
          format: int32
          nullable: true
        passengers:
          type: array
          description:  |
            List of passengers
          items:
            $ref: '#/components/schemas/bf359a36-cdc7-55af-85f5-f36f0f1cb77a'
    bf359a36-cdc7-55af-85f5-f36f0f1cb77a:
      type: object
      description:  |
        Passenger person
      required:
        - birthDate
        - firstName
        - lastName
      properties:
        birthDate:
          type: string
          description:  |
            Birth date
          format: datetime
        firstName:
          type: string
          description:  |
            First name
        middleName:
          type: string
          description:  |
            Middle name
        lastName:
          type: string
          description:  |
            Last name
        nationality:
          type: string
          description:  |
            Nationality. Country ISO Code (ISO 3)
        street:
          type: string
          description:  |
            Street
        city:
          type: string
          description:  |
            City
        zipCode:
          type: string
          description:  |
            ZIP code
        phone:
          type: string
          description:  |
            Phone number
        email:
          type: string
          description:  |
            Email
        extendedPersonData:
          $ref: '#/components/schemas/7d3e6c0c-7044-815f-e074-932e8f18d707'
  securitySchemes:
     ApiKeyAuth:
       type: apiKey
       in: header
       name: X-API-Authentication-Token
       description: |
         All api calls require an Authorization Key which will be provided by M2G api login request.
     
         The key needs to be provided in the header as follows:
     
         * **X-API-Authentication-Token: `{Your-Key-Here}`**
         
         The key is not case sensitive.<br /> <br />
  responses:
    204NoContent:
      description:    |
          No content from response to work with
    400BadRequest: 
      description:    |
        Bad request. Data required by the request are not valid (some of the required properties are missing or might have an invalid format)
    401Unauthorized:
      description:    |
          Authorization token is missing or invalid. Or current user does not have the required permissions
    404NotFound:
      description:    |
          Request URL was not found. Check the URL of the request or contact Magicware about support of the current API
    500InternalServerError:
      description:    |
          Internal server error - request has ended as a fatal error. Check the `message` property for more detail information about the occured error in the response<br /> <br /><p style='margin:0px !important'># Expected errors:</p><table style='margin:0px !important'><tr><th>Error (errorId)</th><th>Description</th></tr><tr><td style='text-align:center'>-1</td><td>Unexpected unknown error with unspecified error ID</td></tr></table>
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorId:
              -1
            timestamp:
              636921892188151049,
            message:
              'The request timeout has expired. Please try again.'
