################################################################################
#                                  Header                                      #
################################################################################
openapi: '3.0.2'
info:
    title: M2G API documentation
    version: v1
    description:    |
        Informations about avaiable M2G API.
        # Getting Started
        ## Swagger UI
        Our API docs are also available via [Swagger UI](https://magicware.github.io/api/swagger-ui)
        ## Security
        ### HTTPS
        All api calls and callbacks require HTTPS. Your service will need a valid SSL certificate and be accesible via the standard SSL port (port 443).
        ## Making an API request
        ```POST https://magicware.iscontent.cz/api/v1/reservations/businessCases HTTP/1.1```
        ```json
        {
            Accept: text/json
            X-API-Authentication-Token: e00a713d-ad81-4b4f-8801-31b34842f640
            Content-Type: application/json; charset=utf-8
            Content-Length: 1000
        }
        ```
    x-logo:
        url: "https://avatars1.githubusercontent.com/u/8859303"
externalDocs:
    url: 'http://www.magicware.cz'
    description: More informations about this feature at www.magicware.cz
servers:
    -    url: https://{instanceName}.{instanceUrl}.com/api/{apiVers}
         description: API server URL format
         variables:
             instanceName:
                 default: 'magicware'
                 description: Actual instance of M2G
             instanceUrl:
                 default: '#instanceUrl#'
                 description: Actual instance of M2G
             apiVers:
                 default: 'v1'
tags:
    -    name: Authentication
         description: Everything about authentication
    -    name: Product
         description: Everything about products
    -    name: Business case
         description: Everything about business cases
################################################################################
#                                  Paths                                       #
################################################################################
paths:
    /administration/user/login:
        post:
            description:    |
                ### **#instanceUrl#**: `is>content`<br /><br />
                ---
                Login and obtain the ApiKeyAuth (apiKey) authentication token.
                
                If the value of property `authenticationToken` is 'null', login was not successful
                
                **Authentication token is automatically set into request header**.
            tags:
                -    Authentication
            summary: "Login and authorize"
            requestBody:
                required: True
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/loginAuthorization'
            responses:
                '200':
                    description:    |
                        OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/loginAuthorizationToken'
                '204':
                    $ref: '#/components/responses/204NoContent'
                '400':
                    $ref: '#/components/responses/400BadRequest'
                '404':
                    $ref: '#/components/responses/404NotFound'
                '500':
                    $ref: '#/components/responses/500InternalServerError'
    /products/priceCorrections:
        put:
            description:    |
                ### **#instanceUrl#**: `is>content`<br /><br />
                ---
                The price correction currently affects adjusted product variant prices only in exports.
            tags:
                -    Product
            summary: "Re-price product variants or adjust their end price."
            security:
                -    ApiKeyAuth: []
            requestBody:
                required: True
                description:    |
                    Price correction with it's type how it behave and it's variant unique key.
                    To remove the price correction, just simply set the price correction amount to a zero.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/priceCorrection'
            responses:
                '200':
                    description:    |
                        OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/priceCorrection'
                '204':
                    $ref: '#/components/responses/204NoContent'
                '400':
                    $ref: '#/components/responses/400BadRequest'
                '401':
                    $ref: '#/components/responses/401Unauthorized'
                '404':
                    $ref: '#/components/responses/404NotFound'
                '500':
                    $ref: '#/components/responses/500InternalServerError'
    /reservations/businessCases:
        post:
            description:    |
                ### **#instanceUrl#**: `is>content`<br /><br />
                ---
                Creates new business case. Returns extra ID and Number of created business case.
            tags:
                -    Business case
            summary: "Create a new business case."
            security:
                -    ApiKeyAuth: []
            requestBody:
                required: True
                description:    |
                    Defines the business case.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/businessCase~1request'
            responses:
                '200':
                    description:    |
                        OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/businessCase~1response'
                '204':
                    $ref: '#/components/responses/204NoContent'
                '400':
                    $ref: '#/components/responses/400BadRequest'
                '401':
                    $ref: '#/components/responses/401Unauthorized'
                '404':
                    $ref: '#/components/responses/404NotFound'
                '500':
                    $ref: '#/components/responses/500InternalServerError'
    /reservations/businessCases/customInfo:
        put:
            description:    |
                ### **#instanceUrl#**: `is>content`<br /><br />
                ---
                Requires an existing business case.
            tags:
                -    Business case
            summary: "Actualize additional data of a business case."
            security:
                -    ApiKeyAuth: []
            requestBody:
                required: True
                description:    |
                    Defines additional data for a business case.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/bcCustomInfo'
            responses:
                '200':
                    description:    |
                        OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/bcCustomInfo'
                '204':
                    $ref: '#/components/responses/204NoContent'
                '400':
                    $ref: '#/components/responses/400BadRequest'
                '401':
                    $ref: '#/components/responses/401Unauthorized'
                '404':
                    $ref: '#/components/responses/404NotFound'
                '500':
                    $ref: '#/components/responses/500InternalServerError'
    /reservations/businessCases/priceItems:
        put:
            description:    |
                ### **#instanceUrl#**: `is>content`<br /><br />
                ---
                Requires an existing business case.
            summary: "Create, modify or release the price items."
            tags:
                -    Business case
            security:
                -    ApiKeyAuth: []
            requestBody:
                required: True
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/priceItems'
            responses:
                '200':
                    description:    |
                        OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/priceItems'
                '204':
                    $ref: '#/components/responses/204NoContent'
                '400':
                    $ref: '#/components/responses/400BadRequest'
                '401':
                    $ref: '#/components/responses/401Unauthorized'
                '404':
                    $ref: '#/components/responses/404NotFound'
                '500':
                    $ref: '#/components/responses/500InternalServerError'
    /reservations/businesscases/invoices:
        get:
            description:    |
                ### **#instanceUrl#**: `is>content`<br /><br />
                ---
                Requires an existing business case.<br /><br />
                
                Gets a list of the business case's proforma invoices. If no proforma invoices exists, they are created automatically by business case's payment policy.
                
                User requesting this action has to be an organization owner of the business case.
            summary: "Get invoices attached to a business case."
            tags:
                -    Business case
            security:
                -    ApiKeyAuth: []
            parameters:
                -    in: query
                     name: businessCaseId
                     description: Required if no `businessCaseNumber` is provided. ID or Number of the business case is required. **Cannot be used both in one request**.
                     required: True
                     schema:
                         type: integer
                         format: int32
                -    in: query
                     name: businessCaseNumber
                     description: Required if no `businessCaseId` is provided. ID or Number of the business case is required. **Cannot be used both in one request**.
                     required: True
                     schema:
                         type: integer
                         format: int64
                -    in: query
                     name: type
                     description: Defines a type of the required invoices.
                     required: True
                     schema:
                         type: string
                         enum: [proforma]
            responses:
                '200':
                    description:    |
                        OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/bcInvoice~1response'
                '204':
                    $ref: '#/components/responses/204NoContent'
                '400':
                    $ref: '#/components/responses/400BadRequest'
                '401':
                    $ref: '#/components/responses/401Unauthorized'
                '404':
                    $ref: '#/components/responses/404NotFound'
                '500':
                    $ref: '#/components/responses/500InternalServerError'
    /reservations/businesscases/invoices/contents:
        get:
            description:    |
                ### **#instanceUrl#**: `is>content`<br /><br />
                ---
                Requires an existing business case and printeable invoice document.<br /><br />
                
                Gets a document file of an invoice.
                
                User requesting this action has to be an organization owner of the business case.
            summary: "Get a printeable invoice file attached to a business case."
            tags:
                -    Business case
            security:
                -    ApiKeyAuth: []
            parameters:
                -    in: query
                     name: businessCaseId
                     description: Required if no `businessCaseNumber` is provided. ID or Number of the business case is required. **Cannot be used both in one request**.
                     required: True
                     schema:
                         type: integer
                         format: int32
                -    in: query
                     name: businessCaseNumber
                     description: Required if no `businessCaseId` is provided. ID or Number of the business case is required. **Cannot be used both in one request**.
                     required: True
                     schema:
                         type: integer
                         format: int64
                -    in: query
                     name: accountingDocId
                     description: ID of an accounting document
                     required: True
                     schema:
                         type: integer
                         format: int32
            responses:
                '200':
                    description:    |
                        OK
                    content:
                        application/pdf:
                            schema:
                                type: string
                                format: binary
                        application/msword:
                            schema:
                                type: string
                                format: binary
                        application/vnd.openxmlformats-officedocument.wordprocessingml.document:
                            schema:
                                type: string
                                format: binary
                '204':
                    $ref: '#/components/responses/204NoContent'
                '400':
                    $ref: '#/components/responses/400BadRequest'
                '401':
                    $ref: '#/components/responses/401Unauthorized'
                '404':
                    $ref: '#/components/responses/404NotFound'
                '500':
                    $ref: '#/components/responses/500InternalServerError'
################################################################################
#                                Components                                    #
################################################################################

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Authentication-Token
      description: |
        "All api calls require an Authorization Key which will be provided by M2G api login request.

        The key needs to be provided in the header as follows:

        * **X-API-Authentication-Token: `{Your-Key-Here}`**
        
        The key is not case sensitive."<br /> <br />
  responses:
    204NoContent:
      description:    |
          No content. Requested data have probably not been found, for some reason
    400BadRequest: 
      description:    |
        Bad request. Data required by the request are not valid (some of the required properties are missing or might have an invalid format)
    401Unauthorized:
      description:    |
          Authorization token is missing or invalid
    404NotFound:
      description:    |
          Request URL was not found. Check the URL of the request or allow the API URL route via M2G API configuration
    500InternalServerError:
      description:    |
          Request ended with fatal error. Check the `message` property for more information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorId:
              -1
            timestamp:
              636921892188151049,
            message:
              "Requested file has not been found."
  schemas:
    Error:
      type: object
      properties:
        errorId:
          type: integer
          format: int32
          description: Internal system ID of the error
        timestamp:
          type: integer
          format: int64
          description: Timestamp of the event, epoch time in milliseconds
        message:
          type: string
          description: Description of the internal server error
          nullable: true
    loginAuthorization:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: User name
        password:
          type: string
          description: User password
    loginAuthorizationToken:
      type: object
      properties:
        authenticationToken:
          type: string
          format: uuid
          description: Authorization token. If the value of property `authenticationToken` is 'null', login was not successful
          nullable: true
          example: e00a713d-ad81-4b4f-8801-31b34842f640
    priceCorrection:
      type: object
      required:
        - amount
        - correctionType
        - dateFrom
        - nights
        - productId
        - facilityUnitPlanId
      properties:
        amount:
          type: number
          format: double
          description: The value of a price correction
        correctionType:
          type: string
          description: |
            Type of correction amount and how it's gonna behave with price
              - `correctionAmount`: apply price correction on the price as adding the amount to the price.<br />
              - `newPrice`: apply price correction on the price as switching the price with the price correction amount.
          enum:
            - correctionAmount
            - newPrice
        dateFrom:
          type: string
          format: date
          description: Date From
        nights:
          type: integer
          format: int32
          description: Count of nights
        departureTransportFacilityId:
          type: integer
          format: int32
          description: ID of a depature transport facility
          nullable: true
        departureStationId:
          type: integer
          format: int32
          description: ID of a departure station
          nullable: true
        returnArrivalStationId:
          type: integer
          format: int32
          description: ID of an arrival station
          nullable: true
        productId:
          type: integer
          format: int32
          description: ID of a product
        priceListCategoryCbId:
          type: integer
          format: int32
          description: Codebook ID of a price list category
          nullable: true
        boardTypeCbId:
          type: integer
          format: int32
          description: Codebook ID of a board type
          nullable: true
        saleGroupId:
          type: integer
          format: int32
          description: ID of a sale group
          nullable: true
        facilityUnitPlanId:
          type: integer
          format: int32
          description: ID of a facility unit plan
    businessCase/request:
      type: object
      properties:
        name:
          type: string
          description: Project name
          nullable: true
        customerId:
          type: integer
          format: int32
          description: ID of a customer.
          nullable: true
        businessCaseKindCbId:
          type: integer
          format: int32
          description: ID of a business case kind.
          nullable: true
        costCenterId:
          type: integer
          format: int32
          description: ID of a cost center.
          nullable: true
    businessCase/response:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: ID of new business case
        number:
          type: integer
          format: int64
          description: Number of new business case
        name:
          type: string
          description: Project name
          nullable: true
        customerId:
          type: integer
          format: int32
          description: ID of a customer.
          nullable: true
        businessCaseKindCbId:
          type: integer
          format: int32
          description: ID of a business case kind.
          nullable: true
        costCenterId:
          type: integer
          format: int32
          description: ID of a cost center.
          nullable: true
    bcCustomInfo:
      type: object
      required:
        - businessCaseId
      properties:
        businessCaseId:
          type: integer
          format: int32
          description: ID of the business case that additional data are for
        destinationId:
          type: integer
          format: int32
          description: ID of a destination
          nullable: true
        productTypeId:
          type: integer
          format: int32
          description: ID of a product type
          nullable: true
        accommodationCategoryCbId:
          type: integer
          format: int32
          description: ID of an accommodation
          nullable: true
        boardTypeCbId:
          type: integer
          format: int32
          description: ID of a board
          nullable: true
        transportTypeCbID:
          type: integer
          format: int32
          description: ID of a board
          nullable: true
        term:
          $ref: '#/components/schemas/bcCustomInfo~1Term'
        accommodationTerm:
          $ref: '#/components/schemas/bcCustomInfo~1AccommodationTerm'
        hotelName:
          type: string
          description: Name of a hotel
        roomKind:
          type: string
          description: Kind of a room
        departurePlace:
          type: string
          description: Departure place
        services:
          type: string
          description: Additional services
    bcCustomInfo/Term:
      description: Term of accomodation
      type: object
      properties:
        dateFrom:
          type: string
          format: date
          description: Date from
          nullable: true
        dateTo:
          type: string
          format: date
          description: Date to
          nullable: true
    bcCustomInfo/AccommodationTerm:
      description: Start and end of the trip
      type: object
      properties:
        dateFrom:
          type: string
          format: date
          description: Date from
          nullable: true
        dateTo:
          type: string
          format: date
          description: Date to
          nullable: true
    priceItems:
      required:
        - arrayOfPriceItem
      type: object
      properties:
        priceItems:
          type: array
          items: 
            $ref: '#/components/schemas/priceItem'
    priceItem:
      required:
        - businessCaseId
        - commitmentModeId
        - amount
        - currencyId
        - operation
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
          description:  |
            ID of a price item. 
            Can be null or empty if the property 'operation' is 'save'
        businessCaseId:
          type: integer
          format: int32
          description: ID of a business case
        priceListItemId:
          type: integer
          format: int32
          nullable: true
          description: ID of a price list item
        commitmentModeId:
          type: integer
          format: int32
          description: ID of a commitment mode
        name:
          type: string
          description: Name of a price item
          nullable: true
        amount:
          type: number
          format: double
          description: The value of a price item amount
        currencyId:
          type: integer
          format: int32
        accountingId:
          type: integer
          format: int32
          nullable: true
          description: ID of an accounting
        operation:
          type: string
          description: |
            The operation with a price item, that you intend to do
              - `save`: 
                  If the property `id` is 'null' or empty, then the new price item will be created.
                  Otherwise if the property `id` has a value, then an update of an existing price item will be proceed.
              - `release`: 
                  The price item of a set property `id` will be realesed (not cancelled)
          enum:
            - save
            - release
    bcInvoice/request:
      type: object
      required:
        - businessCaseId
        - businessCaseNumber
        - type
      properties:
        businessCaseId:
          type: integer
          format: int32
          description: Required if no `businessCaseNumber` is provided. ID or Number of the business case is required. **Cannot be used both in one request**.
          nullable: true
        businessCaseNumber:
          type: integer
          format: int64
          description: Required if no `businessCaseId` is provided. ID or Number of the business case is required. **Cannot be used both in one request**.
          nullable: true
        type:
          type: string          
          enum:
            - proforma
          description: |
            Defines a type of the required invoices
            - `proforma`:
                Gets the proforma type invoices
    bcInvoice/response:
      required:
        - arrayOfBcInvoices
      type: object
      properties:
        invoices:
          type: array
          items: 
            $ref: '#/components/schemas/bcInvoice~1response~1bcInvoice'
    bcInvoice/response/bcInvoice:
      type: object
      properties:
        variableSymbol:
          type: integer
          format: int64
          nullable: true
          description: Variable symbol of the invoice
        value:
          type: number
          format: double
          description: Value of the invoice
        accountingDocId:
          type: integer
          format: int32
          description: ID of the document where invoice is stored as a printable document
